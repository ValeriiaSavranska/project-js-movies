{"version":3,"sources":["js/services/variables-for-request.js","js/services/get-trending-movies.js","js/services/search-movie.js","js/services/get-movie-card.js","js/services/get-genres.js","js/partials-js/main-page.js","index.js"],"names":["BASE_URL","API_KEY","page","getTrendingMovies","response","fetch","data","json","getSearchMovie","movieToSearch","movieId","getGenres","galleryDiv","document","querySelector","headerNavTitle","markupTrendin","movies","results","map","poster_path","backdrop_pathL","genre_ids","release_date","title","Other","arrGenre","then","genres","item","i","length","id","name","push","yer","Date","markupTwo","join","getFullYear","insertAdjacentHTML","addEventListener","e","preventDefault"],"mappings":";;;;;AAEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,QAAA,SAAA,QAAA,aAAA,EAFA,MAAMA,EAAW,gCAEjB,QAAA,SAAA,EADA,MAAMC,EAAU,mCAChB,QAAA,QAAA,EAAA,IAAIC,EAAO,EAAX,QAAA,KAAA;;ACMA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,uBAAA,EARA,IAAA,EAAA,QAAA,2BAEA,MAAMC,EAAoB,UAClBC,MAAAA,QAAiBC,SAASL,EAAS,uCAA8BC,EAAQ,WAExEK,aADYF,EAASG,QAI9B,QAAA,kBAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EARA,IAAA,EAAA,QAAA,2BAEA,MAAMC,EAAiB,MAAA,IACfJ,MAAAA,QAAiBC,SAASL,EAAS,gCAAuBC,EAAQ,iBAASQ,KAE1EH,aADYF,EAASG,QAI9B,QAAA,eAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EARA,IAAA,EAAA,QAAA,2BAEA,MAAMC,EAAiB,MAAA,IACfJ,MAAAA,QAAiBC,SAASL,EAAS,iBAAQU,aAAmBT,EAAQ,WAErEK,aADYF,EAASG,QAI9B,QAAA,eAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EARA,IAAA,EAAA,QAAA,2BAEA,MAAMI,EAAY,UACVP,MAAAA,QAAiBC,SAASL,EAAS,oCAA2BC,EAAQ,WAErEK,aADYF,EAASG,QAI9B,QAAA,UAAA;;ACqCA,aA7CA,IAAA,EAAA,QAAA,mCACA,EAAA,QAAA,0BAEA,MAAMK,EAAaC,SAASC,cAAc,YACpCC,EAAiBF,SAASC,cAAc,qBAE9C,SAASE,EAAcC,GACNA,EAAOC,QAAQC,IAC5B,IAAC,IAAA,YAAEC,EAAF,eAAeC,EAAf,UAA+BC,EAA/B,aAA0CC,EAA1C,MAAwDC,GAAY,EAC/DC,EAAQ,GACNC,MAAAA,EAAW,IACLC,EAAAA,EAAAA,aAAAA,KAAKrB,IACHA,EAAKsB,OAAOT,IAAIU,IACrB,IAAA,IAAIC,EAAI,EAAGA,EAAIR,EAAUS,OAAQD,IAChCR,GAAAA,EAAUQ,KAAOD,EAAKG,GAAI,CACxBC,IAAAA,EAAOJ,EAAKI,KAChBP,EAASQ,KAAKD,MAIhBP,EAASK,OAAS,GACpBN,EAAMS,KAAKR,EAAS,IACpBD,EAAMS,KAAKR,EAAS,IACpBD,EAAMS,KAAK,UAEXT,EAAQ,IAAIC,GAERS,MAAAA,EAAM,IAAIC,KAAKb,GACfc,oGAEsDjB,WAAqBI,mGAE9CA,4FAEFC,EAAMa,KAAK,WAAWH,EAAII,uEAI3D3B,EAAW4B,mBAAmB,YAAaH,QAKnD,EAAoBV,EAAAA,qBAAAA,KAAKV,GAAUD,EAAcC,IAEjDF,EAAe0B,iBAAiB,QAASC,IACvCA,EAAEC,kBACkBhB,EAAAA,EAAAA,qBAAAA,KAAKV,GAAUD,EAAcC;;ACvCnD,aARA,QAAA,oBAEA,QAAA,aAEA,QAAA,qCACA,QAAA,8BACA,QAAA,gCACA,QAAA,4BACA,QAAA","file":"src.cae3e49b.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '61e2735d71b7e3847b723f570f360fd1';\nlet page = 1;\n\nexport { BASE_URL, API_KEY, page };\n","import { BASE_URL, API_KEY, page } from './variables-for-request';\n\nconst getTrendingMovies = async () => {\n  const response = await fetch(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n};\n\n//getTrendingMovies().then(movies => console.log(movies));\nexport { getTrendingMovies };","import { BASE_URL, API_KEY, page } from './variables-for-request';\n\nconst getSearchMovie = async movieToSearch => {\n  const response = await fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${movieToSearch}`);\n  const data = await response.json();\n  return data;\n};\n\n//getSearchMovie('venom').then(movies => console.log(movies));\nexport { getSearchMovie };","import { BASE_URL, API_KEY } from './variables-for-request';\n\nconst getSearchMovie = async movieId => {\n  const response = await fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n};\n\n//getSearchMovie(850522).then(movie => console.log(movie));\nexport { getSearchMovie };","import { BASE_URL, API_KEY } from './variables-for-request';\n\nconst getGenres = async () => {\n  const response = await fetch(`${BASE_URL}genre/movie/list?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n};\n\n//getGenres().then(genres => console.log(genres));\nexport { getGenres };","import { getTrendingMovies } from '../services/get-trending-movies';\nimport { getGenres } from '../services/get-genres';\n\nconst galleryDiv = document.querySelector('.gallery');\nconst headerNavTitle = document.querySelector('.header-nav__logo');\n\nfunction markupTrendin(movies) {\n  const markup = movies.results.map(\n    ({ poster_path, backdrop_pathL, genre_ids, release_date, title }) => {\n      let Other = [];\n      const arrGenre = [];\n      getGenres().then(data => {\n        const arr = data.genres.map(item => {\n          for (let i = 0; i < genre_ids.length; i++) {\n            if (genre_ids[i] === item.id) {\n              let name = item.name;\n              arrGenre.push(name);\n            }\n          }\n        });\n        if (arrGenre.length > 3) {\n          Other.push(arrGenre[0]);\n          Other.push(arrGenre[1]);\n          Other.push('Other');\n        } else {\n          Other = [...arrGenre];\n        }\n        const yer = new Date(release_date);\n        const markupTwo = `\n        <li class=\"card\">\n        <img class=\"card-img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" loading=\"lazy\" />\n        <div class=\"card-info\">\n            <h2 class=\"card-info__title\">${title}</h2>\n            <ul class=\"card-info__text\">\n                <li class=\"link-genre\">${Other.join(', ')} | ${yer.getFullYear()}</li>\n            </ul>\n        </div>\n        </li>`;\n        galleryDiv.insertAdjacentHTML('beforeend', markupTwo);\n      });\n    },\n  );\n}\ngetTrendingMovies().then(movies => markupTrendin(movies));\n\nheaderNavTitle.addEventListener('click', e => {\n  e.preventDefault();\n  getTrendingMovies().then(movies => markupTrendin(movies));\n});\n","import './sass/main.scss';\n\nimport './js/main';\n\nimport './js/services/get-trending-movies';\nimport './js/services/search-movie';\nimport './js/services/get-movie-card';\nimport './js/services/get-genres';\nimport './js/partials-js/main-page';\n\n// import './js/markup/'\n"]}